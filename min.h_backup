#include <time.h>
#include <iostream>
#include <fstream>
#include <string>
#include <cstring>
#include <math.h>
#include </home/pengcao/gsl-1.16/gsl/gsl_multimin.h>
/* Paraboloid centered on (p[0],p[1]), with  
   scale factors (p[2],p[3]) and minimum p[4] */
double p[40][3] =
{
{ 0.921,	0,		0 }, 			//1    antenna 1
{ 0.651245,	0.651245,	0 }, 	//2
{ 0,		0.921,		0 }, 			//3
{ -0.651245,	0.651245,	0 }, 	//4
{ -0.921,	0,		0 }, 		//5
{ -0.651245,	-0.651245,	0 }, 	//6
{ 0,		-0.921,		0 },			//7
{ 0.651245,	-0.651245,	0 }, 	//8
{ 0.697529,	-0.288926,	-0.967 }, 	//9
{ 0.697529,	0.288926,	-0.967 },  	//10
{ 0.288926,	0.697529,	-0.967 },  	//11
{ -0.288926,	0.697529,	-0.967 }, 	//12
{ -0.697529,	0.288926,	-0.967 }, 	//13
{ -0.697529,	-0.288926,	-0.967 },	//14
{ -0.288926,	-0.697529,	-0.967 },	//15
{ 0.288926,	-0.697529,	-0.967 }, 	//16
{ 1.90781,	-0.790241,	-3.731 }, 	//17
{ 2.0635,	0, 		-3.731}, 	//18
{ 1.90781,	0.790241,	-3.731 },  	//19
{ 1.46018,	1.46018,	-3.731 },  	//20
{ 0.790241,	1.90781,	-3.731 },  	//21
{ 0,2.065,	-3.731 }, 	 	//22
{ -0.790241,	1.90781,	-3.731 },  	//23
{ -1.46018,	1.46018,	-3.731 },  	//24
{ -1.90781,	0.790241,	-3.731 },  	//25
{ -2.065,	0,		-3.731 },  		//26
{ -1.90781,	-0.790241,	-3.731 }, 	//27
{ -1.46018,	-1.46018,	-3.731 },  	//28
{ -0.790241,	-1.90781,	-3.731 }, 	//29
{ 0,		-2.065,		-3.731 },  		//30
{ 0.790241,	-1.90781,	-3.731 },  	//31
{ 1.46018,	-1.46018,	-3.731 },  	//32
{ 1.56136,	-0.646735,	-5.377 },  	//33
{ 1.56136,	0.646735,	-5.377 },  	//34
{ 0.646735,	1.56136,	-5.377 },  	//35
{ -0.646735,	1.56136,	-5.377 },  	//36
{ -1.56136,	0.646735,	-5.377 },  	//37
{ -1.56136,	-0.646735,	-5.377 }, 	//38
{ -0.646735,	-1.56136,	-5.377 }, 	//39
{ 0.646735,	-1.56136,	-5.377 }  	//40
};
double
my_f (const gsl_vector *v, void *params)
{
  double x, y, z, t;
  double *pt = (double *)params;
  int i;
  double result=0;
  
  x = gsl_vector_get(v, 0);
  y = gsl_vector_get(v, 1);
  z = gsl_vector_get(v, 2);
  t = gsl_vector_get(v, 3);
  for(i=0; i<40; i++){
    if(pt[i]!=0){
//	printf("%d ", i);
      result+=pow(sqrt((x-p[i][0])*(x-p[i][0])+(y-p[i][1])*(y-p[i][1])+(z-p[i][2])*(z-p[i][2]))-0.3*(pt[i]-t),2);
    }
  } 
  return result;
/*
  return 
    pow(sqrt((x-p[18][0])*(x-p[18][0])+(y-p[18][1])*(y-p[18][1])+(z-p[18][2])*(z-p[18][2]))-0.3*(pa[18]-t),2)
  + pow(sqrt((x-p[19][0])*(x-p[19][0])+(y-p[19][1])*(y-p[19][1])+(z-p[19][2])*(z-p[19][2]))-0.3*(pa[19]-t),2)
  + pow(sqrt((x-p[20][0])*(x-p[20][0])+(y-p[20][1])*(y-p[20][1])+(z-p[20][2])*(z-p[20][2]))-0.3*(pa[20]-t),2)
  + pow(sqrt((x-p[21][0])*(x-p[21][0])+(y-p[21][1])*(y-p[21][1])+(z-p[21][2])*(z-p[21][2]))-0.3*(pa[21]-t),2)
  + pow(sqrt((x-p[33][0])*(x-p[33][0])+(y-p[33][1])*(y-p[33][1])+(z-p[33][2])*(z-p[33][2]))-0.3*(pa[33]-t),2)
  + pow(sqrt((x-p[34][0])*(x-p[34][0])+(y-p[34][1])*(y-p[34][1])+(z-p[34][2])*(z-p[34][2]))-0.3*(pa[34]-t),2)
  + pow(sqrt((x-p[35][0])*(x-p[35][0])+(y-p[35][1])*(y-p[35][1])+(z-p[35][2])*(z-p[35][2]))-0.3*(pa[35]-t),2)
	;
*/
}

/* The gradient of f, df = (df/dx, df/dy). */
void 
my_df (const gsl_vector *v, void *params, 
       gsl_vector *df)
{
  double x, y, z, t;
  int i;
  double result[4]={0,0,0,0};
  double *pt = (double *)params;
  
  x = gsl_vector_get(v, 0);
  y = gsl_vector_get(v, 1);
  z = gsl_vector_get(v, 2);
  t = gsl_vector_get(v, 3);
  for(i=0; i<40; i++){
    if (pt[i]!=0){
      result[0]+=2*(x-p[i][0])*(sqrt(pow(x-p[i][0],2)+pow(y-p[i][1],2)+pow(z-p[i][2],2))-0.3*(pt[i]-t))/(sqrt(pow(x-p[i][0],2)+pow(y-p[i][1],2)+pow(z-p[i][2],2)));
      result[1]+=2*(y-p[i][1])*(sqrt(pow(x-p[i][0],2)+pow(y-p[i][1],2)+pow(z-p[i][2],2))-0.3*(pt[i]-t))/(sqrt(pow(x-p[i][0],2)+pow(y-p[i][1],2)+pow(z-p[i][2],2)));
      result[2]+=2*(z-p[i][2])*(sqrt(pow(x-p[i][0],2)+pow(y-p[i][1],2)+pow(z-p[i][2],2))-0.3*(pt[i]-t))/(sqrt(pow(x-p[i][0],2)+pow(y-p[i][1],2)+pow(z-p[i][2],2)));
      result[3]+= 0.6*(sqrt(pow(x-p[i][0],2)+pow(y-p[i][1],2)+pow(z-p[i][2],2))-0.3*(pt[i]-t));
    }
  }
  gsl_vector_set(df, 0, result[0]);
  gsl_vector_set(df, 1, result[1]);
  gsl_vector_set(df, 2, result[2]);
  gsl_vector_set(df, 3, result[3]);
  
/*
  gsl_vector_set(df, 0, 
  2*(x-p[18][0])*(sqrt(pow(x-p[18][0],2)+pow(y-p[18][1],2)+pow(z-p[18][2],2))-0.3*(pa[18]-t))/(sqrt(pow(x-p[18][0],2)+pow(y-p[18][1],2)+pow(z-p[18][2],2))) 
+ 2*(x-p[19][0])*(sqrt(pow(x-p[19][0],2)+pow(y-p[19][1],2)+pow(z-p[19][2],2))-0.3*(pa[19]-t))/(sqrt(pow(x-p[19][0],2)+pow(y-p[19][1],2)+pow(z-p[19][2],2)))
+ 2*(x-p[20][0])*(sqrt(pow(x-p[20][0],2)+pow(y-p[20][1],2)+pow(z-p[20][2],2))-0.3*(pa[20]-t))/(sqrt(pow(x-p[20][0],2)+pow(y-p[20][1],2)+pow(z-p[20][2],2)))
+ 2*(x-p[21][0])*(sqrt(pow(x-p[21][0],2)+pow(y-p[21][1],2)+pow(z-p[21][2],2))-0.3*(pa[21]-t))/(sqrt(pow(x-p[21][0],2)+pow(y-p[21][1],2)+pow(z-p[21][2],2)))
+ 2*(x-p[33][0])*(sqrt(pow(x-p[33][0],2)+pow(y-p[33][1],2)+pow(z-p[33][2],2))-0.3*(pa[33]-t))/(sqrt(pow(x-p[33][0],2)+pow(y-p[33][1],2)+pow(z-p[33][2],2)))
+ 2*(x-p[34][0])*(sqrt(pow(x-p[34][0],2)+pow(y-p[34][1],2)+pow(z-p[34][2],2))-0.3*(pa[34]-t))/(sqrt(pow(x-p[34][0],2)+pow(y-p[34][1],2)+pow(z-p[34][2],2)))
+ 2*(x-p[35][0])*(sqrt(pow(x-p[35][0],2)+pow(y-p[35][1],2)+pow(z-p[35][2],2))-0.3*(pa[35]-t))/(sqrt(pow(x-p[35][0],2)+pow(y-p[35][1],2)+pow(z-p[35][2],2)))
			);
  gsl_vector_set(df, 1, 
  2*(y-p[18][1])*(sqrt(pow(x-p[18][0],2)+pow(y-p[18][1],2)+pow(z-p[18][2],2))-0.3*(pa[18]-t))/(sqrt(pow(x-p[18][0],2)+pow(y-p[18][1],2)+pow(z-p[18][2],2))) 
+ 2*(y-p[19][1])*(sqrt(pow(x-p[19][0],2)+pow(y-p[19][1],2)+pow(z-p[19][2],2))-0.3*(pa[19]-t))/(sqrt(pow(x-p[19][0],2)+pow(y-p[19][1],2)+pow(z-p[19][2],2)))
+ 2*(y-p[20][1])*(sqrt(pow(x-p[20][0],2)+pow(y-p[20][1],2)+pow(z-p[20][2],2))-0.3*(pa[20]-t))/(sqrt(pow(x-p[20][0],2)+pow(y-p[20][1],2)+pow(z-p[20][2],2)))
+ 2*(y-p[21][1])*(sqrt(pow(x-p[21][0],2)+pow(y-p[21][1],2)+pow(z-p[21][2],2))-0.3*(pa[21]-t))/(sqrt(pow(x-p[21][0],2)+pow(y-p[21][1],2)+pow(z-p[21][2],2)))
+ 2*(y-p[33][1])*(sqrt(pow(x-p[33][0],2)+pow(y-p[33][1],2)+pow(z-p[33][2],2))-0.3*(pa[33]-t))/(sqrt(pow(x-p[33][0],2)+pow(y-p[33][1],2)+pow(z-p[33][2],2)))
+ 2*(y-p[34][1])*(sqrt(pow(x-p[34][0],2)+pow(y-p[34][1],2)+pow(z-p[34][2],2))-0.3*(pa[34]-t))/(sqrt(pow(x-p[34][0],2)+pow(y-p[34][1],2)+pow(z-p[34][2],2)))
+ 2*(y-p[35][1])*(sqrt(pow(x-p[35][0],2)+pow(y-p[35][1],2)+pow(z-p[35][2],2))-0.3*(pa[35]-t))/(sqrt(pow(x-p[35][0],2)+pow(y-p[35][1],2)+pow(z-p[35][2],2)))
			);
  gsl_vector_set(df, 2, 
  2*(z-p[18][2])*(sqrt(pow(x-p[18][0],2)+pow(y-p[18][1],2)+pow(z-p[18][2],2))-0.3*(pa[18]-t))/(sqrt(pow(x-p[18][0],2)+pow(y-p[18][1],2)+pow(z-p[18][2],2))) 
+ 2*(z-p[19][2])*(sqrt(pow(x-p[19][0],2)+pow(y-p[19][1],2)+pow(z-p[19][2],2))-0.3*(pa[19]-t))/(sqrt(pow(x-p[19][0],2)+pow(y-p[19][1],2)+pow(z-p[19][2],2)))
+ 2*(z-p[20][2])*(sqrt(pow(x-p[20][0],2)+pow(y-p[20][1],2)+pow(z-p[20][2],2))-0.3*(pa[20]-t))/(sqrt(pow(x-p[20][0],2)+pow(y-p[20][1],2)+pow(z-p[20][2],2)))
+ 2*(z-p[21][2])*(sqrt(pow(x-p[21][0],2)+pow(y-p[21][1],2)+pow(z-p[21][2],2))-0.3*(pa[21]-t))/(sqrt(pow(x-p[21][0],2)+pow(y-p[21][1],2)+pow(z-p[21][2],2)))
+ 2*(z-p[33][2])*(sqrt(pow(x-p[33][0],2)+pow(y-p[33][1],2)+pow(z-p[33][2],2))-0.3*(pa[33]-t))/(sqrt(pow(x-p[33][0],2)+pow(y-p[33][1],2)+pow(z-p[33][2],2)))
+ 2*(z-p[34][2])*(sqrt(pow(x-p[34][0],2)+pow(y-p[34][1],2)+pow(z-p[34][2],2))-0.3*(pa[34]-t))/(sqrt(pow(x-p[34][0],2)+pow(y-p[34][1],2)+pow(z-p[34][2],2)))
+ 2*(z-p[35][2])*(sqrt(pow(x-p[35][0],2)+pow(y-p[35][1],2)+pow(z-p[35][2],2))-0.3*(pa[35]-t))/(sqrt(pow(x-p[35][0],2)+pow(y-p[35][1],2)+pow(z-p[35][2],2)))
			);
  gsl_vector_set(df, 3,	 0.6*(
			 sqrt(pow(x-p[18][0],2)+pow(y-p[18][1],2)+pow(z-p[18][2],2))-0.3*(pa[18]-t)
			+sqrt(pow(x-p[19][0],2)+pow(y-p[19][1],2)+pow(z-p[19][2],2))-0.3*(pa[19]-t)
			+sqrt(pow(x-p[20][0],2)+pow(y-p[20][1],2)+pow(z-p[20][2],2))-0.3*(pa[20]-t)
			+sqrt(pow(x-p[21][0],2)+pow(y-p[21][1],2)+pow(z-p[21][2],2))-0.3*(pa[21]-t)
			+sqrt(pow(x-p[33][0],2)+pow(y-p[33][1],2)+pow(z-p[33][2],2))-0.3*(pa[33]-t)
			+sqrt(pow(x-p[34][0],2)+pow(y-p[34][1],2)+pow(z-p[34][2],2))-0.3*(pa[34]-t)
			+sqrt(pow(x-p[35][0],2)+pow(y-p[35][1],2)+pow(z-p[35][2],2))-0.3*(pa[35]-t)
				)
			);
*/
}

/* Compute both f and df together. */
void 
my_fdf (const gsl_vector *x, void *params, 
        double *f, gsl_vector *df) 
{
  *f = my_f(x, params); 
  my_df(x, params, df);
} 

